//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace net.r_eg.DllExport.Activator {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("net.r_eg.DllExport.Activator.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}` is configured as `{1}`..
        /// </summary>
        internal static string _0_is_configured_as_1 {
            get {
                return ResourceManager.GetString("_0_is_configured_as_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is ignored due to {1}..
        /// </summary>
        internal static string _0_is_ignored_due_to_1 {
            get {
                return ResourceManager.GetString("_0_is_ignored_due_to_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not configured..
        /// </summary>
        internal static string _0_is_not_configured {
            get {
                return ResourceManager.GetString("_0_is_not_configured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allocated item `{0}` = `{1}`..
        /// </summary>
        internal static string Allocated_item_0_1 {
            get {
                return ResourceManager.GetString("Allocated_item_0_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} has not been setup..
        /// </summary>
        internal static string AssemblyRedirection_for_0_has_not_been_setup_ {
            get {
                return ResourceManager.GetString("AssemblyRedirection_for_0_has_not_been_setup_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Both key values: KeyContainer &quot;{0}&quot; and KeyFile &quot;{0}&quot; are present, only one can be specified..
        /// </summary>
        internal static string Both_key_values_KeyContainer_0_and_KeyFile_0_are_present_only_one_can_be_specified {
            get {
                return ResourceManager.GetString("Both_key_values_KeyContainer_0_and_KeyFile_0_are_present_only_one_can_be_specifie" +
                        "d", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find &apos;{0}&apos;..
        /// </summary>
        internal static string Cannot_find_0_ {
            get {
                return ResourceManager.GetString("Cannot_find_0_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find ilasm.exe in &apos;{0}&apos;..
        /// </summary>
        internal static string Cannot_find_ilasm_exe_in_0_ {
            get {
                return ResourceManager.GetString("Cannot_find_ilasm_exe_in_0_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find ilasm.exe without a FrameworkPath..
        /// </summary>
        internal static string Cannot_find_ilasm_exe_without_a_FrameworkPath {
            get {
                return ResourceManager.GetString("Cannot_find_ilasm_exe_without_a_FrameworkPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find lib.exe in &apos;{0}&apos;..
        /// </summary>
        internal static string Cannot_find_lib_exe_in_0_ {
            get {
                return ResourceManager.GetString("Cannot_find_lib_exe_in_0_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot get a reference to {0}, starting with .Net 4.5, this class is required to find ilasm.exe and ildasm.exe..
        /// </summary>
        internal static string Cannot_get_a_reference_to_ToolLocationHelper {
            get {
                return ResourceManager.GetString("Cannot_get_a_reference_to_ToolLocationHelper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file `{0}` is not supported to continue {1} processing..
        /// </summary>
        internal static string File_0_is_not_supported_for_1 {
            get {
                return ResourceManager.GetString("File_0_is_not_supported_for_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect format of {0}..
        /// </summary>
        internal static string Incorrect_format_of_0_ {
            get {
                return ResourceManager.GetString("Incorrect_format_of_0_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input file &quot;{0}&quot; does not exist, cannot create unmanaged exports..
        /// </summary>
        internal static string Input_file_0_does_not_exist__cannot_create_unmanaged_exports {
            get {
                return ResourceManager.GetString("Input_file_0_does_not_exist__cannot_create_unmanaged_exports", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input file &quot;{0}&quot; does not have a DLL extension..
        /// </summary>
        internal static string Input_file_0_is_not_a_DLL_hint {
            get {
                return ResourceManager.GetString("Input_file_0_is_not_a_DLL_hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input file is empty, cannot create unmanaged exports..
        /// </summary>
        internal static string Input_file_is_empty__cannot_create_unmanaged_exports {
            get {
                return ResourceManager.GetString("Input_file_is_empty__cannot_create_unmanaged_exports", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output assembly was signed, however neither keyfile nor keycontainer could be inferred. Reading those values from assembly attributes is not (yet) supported, they have to be defined inside the MSBuild project file..
        /// </summary>
        internal static string Output_assembly_was_signed_however_neither_keyfile_nor_keycontainer_could_be_inferred__Reading_those_values_from_assembly_attributes_is_not__yet__supported__they_have_to_be_defined_inside_the_MSBuild_project_file {
            get {
                return ResourceManager.GetString("Output_assembly_was_signed_however_neither_keyfile_nor_keycontainer_could_be_infe" +
                        "rred__Reading_those_values_from_assembly_attributes_is_not__yet__supported__they" +
                        "_have_to_be_defined_inside_the_MSBuild_project_file", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SdkPath is empty, continuing with &apos;{0}&apos;..
        /// </summary>
        internal static string SdkPath_is_empty_continuing_with_0_ {
            get {
                return ResourceManager.GetString("SdkPath_is_empty_continuing_with_0_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skipped method exports, because the platform target is neither x86 nor x64. Set the MsBuild property &apos;NoDllExportsForAnyCpu&apos; to false if you want to create separate versions for x86 and x64. (e.g. you can do that in the package manager console: Set-NoDllExportsForAnyCpu -value $false).
        /// </summary>
        internal static string Skipped_Method_Exports {
            get {
                return ResourceManager.GetString("Skipped_Method_Exports", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} could not find {1}..
        /// </summary>
        internal static string ToolLocationHelperTypeName_could_not_find_1 {
            get {
                return ResourceManager.GetString("ToolLocationHelperTypeName_could_not_find_1", resourceCulture);
            }
        }
    }
}
